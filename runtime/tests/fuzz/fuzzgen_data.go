// Code generated by fuzzgen_test.go. DO NOT EDIT.

package fuzz

import . "github.com/onflow/cadence/runtime/parser2/lexer"

//////////////////////////////////////////
// TestOrGenerateExampleFuzzgenMessage vvv

// hello from example fuzzgen test.

// TestOrGenerateExampleFuzzgenMessage ^^^
//////////////////////////////////////////

//////////////////////////////////////////////
// example token values:

var exampleTokenValues = [TokenMax][]string {
	TokenBinaryIntegerLiteral: {
		"0b00000100",
		"0b00001100",
		"0b00010001",
		"0b00010100",
		"0b001000",
		"0b01100000",
		"0b1010",
		"0b101010",
		"0b101010_101010",
		"0b101010_101010_",
		"0b_101010_101010",
	},
	TokenOctalIntegerLiteral: {
		"0o10",
		"0o32",
		"0o32_45",
		"0o32_45_",
		"0o_32_45",
	},
	TokenDecimalIntegerLiteral: {
		"0",
		"00123",
		"01",
		"09",
		"0_",
		"0_100",
		"1",
		"10",
		"100",
		"10000000000000000",
		"11",
		"115792089237316195423570985008687907853269984665640564039457584007913129639934",
		"115792089237316195423570985008687907853269984665640564039457584007913129639935",
		"115792089237316195423570985008687907853269984665640564039457584007913129639936",
		"12",
		"120",
		"123",
		"1234",
		"1234567890",
		"126",
		"127",
		"128",
		"129",
		"13",
		"13423",
		"14",
		"15",
		"16",
		"170141183460469231731687303715884105726",
		"170141183460469231731687303715884105727",
		"170141183460469231731687303715884105728",
		"170141183460469231731687303715884105729",
		"18446744073709551614",
		"18446744073709551615",
		"18446744073709551616",
		"184467440738",
		"1_100",
		"1_234_567_890",
		"1_234_567_890_",
		"2",
		"20",
		"200",
		"2147483646",
		"2147483647",
		"2147483648",
		"2147483649",
		"22",
		"23",
		"23423",
		"254",
		"255",
		"256",
		"275",
		"3",
		"30",
		"32",
		"32766",
		"32767",
		"32768",
		"32769",
		"340282366920938463463374607431768211454",
		"340282366920938463463374607431768211455",
		"340282366920938463463374607431768211456",
		"4",
		"40",
		"400",
		"42",
		"4294967294",
		"4294967295",
		"4294967296",
		"456",
		"5",
		"50",
		"534",
		"534534",
		"567",
		"57896044618658097711785492504343953926634992332820282019728792003956564819966",
		"57896044618658097711785492504343953926634992332820282019728792003956564819967",
		"57896044618658097711785492504343953926634992332820282019728792003956564819968",
		"57896044618658097711785492504343953926634992332820282019728792003956564819969",
		"6",
		"60",
		"65",
		"65534",
		"65535",
		"65536",
		"66",
		"676983016644359394637212096269997871",
		"676983016644359394637212096269997871684197836659065544033845082275068334",
		"7",
		"764",
		"77",
		"8",
		"80",
		"9",
		"90",
		"9223372036854775806",
		"9223372036854775807",
		"9223372036854775808",
		"9223372036854775809",
		"92233720369",
	},
	TokenHexadecimalIntegerLiteral: {
		"0x0",
		"0x000000000000002a",
		"0x01",
		"0x0100000000000000",
		"0x02",
		"0x0b2a3299cc857e29",
		"0x1",
		"0x10000000000000000",
		"0x10000000000000001",
		"0x1111111111111111111",
		"0x1234",
		"0x123456",
		"0x1d7e57aa55817448",
		"0x2",
		"0x2a3c4c2581cef731",
		"0x3",
		"0x4",
		"0x42",
		"0x5a76b4858ce34b2f",
		"0x631e88ae7f1d7c20",
		"0x7e60df042a9c0868",
		"0x99ca04281098b33d",
		"0x9a0766d93b6608b7",
		"0xCA",
		"0xCADE",
		"0xDE",
		"0x_f2_09",
		"0xaad3e26e406987c2",
		"0xf2",
		"0xf2_09",
		"0xf2_09_",
		"0xfffffffffffffffe",
		"0xffffffffffffffff",
	},
	TokenFixedPointNumberLiteral: {
		"0.0",
		"0.00000000",
		"0.1",
		"0.10",
		"0.42",
		"0.81",
		"1.0",
		"1.00000000",
		"1.01",
		"1.012",
		"1.0123",
		"1.01234",
		"1.012345",
		"1.0123456",
		"1.01234567",
		"1.012345678",
		"1.0123456789",
		"1.01234567890",
		"1.012345678901",
		"1.0123456789012",
		"1.01234567890123",
		"1.012345678901234",
		"1.1",
		"1.2",
		"1.23",
		"1.23000000",
		"1.7",
		"100.0",
		"12.34",
		"1234.056",
		"12345.006789",
		"1234_5678_90.0009_8765_4321",
		"184467440736.09551615",
		"184467440737.0",
		"184467440737.09551615",
		"184467440737.09551616",
		"184467440738.09551615",
		"2.0",
		"2.3",
		"3.4",
		"4.0",
		"4.5",
		"42.0",
		"42.24",
		"42.3",
		"5.0",
		"5.2",
		"5.3",
		"5.4",
		"50.0",
		"6.0",
		"6.4",
		"789.00123010",
		"92233720367.54775807",
		"92233720367.54775808",
		"92233720368.0",
		"92233720368.54775807",
		"92233720368.54775808",
		"92233720368.54775809",
		"92233720369.0",
		"92233720369.54775807",
		"92233720369.54775808",
		"999999999.0",
	},
	TokenIdentifier: {
		"A",
		"AAA",
		"AccountKey",
		"Address",
		"Admin",
		"AdminStoragePath",
		"Administrator",
		"AggregateBLSPublicKeys",
		"AggregateBLSSignatures",
		"Also",
		"AnInterface",
		"Any",
		"AnyResource",
		"AnyStruct",
		"Auction",
		"AuctionDutch",
		"AuctionDutchBid",
		"AuctionDutchBidIncreased",
		"AuctionDutchBidRejected",
		"AuctionDutchCreated",
		"AuctionDutchSettle",
		"AuctionDutchStatus",
		"AuctionDutchTick",
		"AuthAccount",
		"B",
		"BBB",
		"BImpl",
		"BLS_BLS12_381",
		"Balance",
		"Bar",
		"Baz",
		"Bid",
		"BidCollection",
		"BidCollectionPublic",
		"BidCollectionPublicPath",
		"BidCollectionStoragePath",
		"BidInfo",
		"BidReport",
		"Bids",
		"Bool",
		"Burner",
		"BurnerCreated",
		"C",
		"C1",
		"C2",
		"C3",
		"C4",
		"CI",
		"CI_TR1",
		"CI_TR2",
		"CI_TR2_TR",
		"Capability",
		"CapabilityPath",
		"CapabilityType",
		"Carrier",
		"Cat",
		"Character",
		"Collection",
		"CollectionBalancePath",
		"CollectionPublic",
		"CollectionPublicPath",
		"CollectionReceiverPath",
		"CollectionStoragePath",
		"CompositeType",
		"ConstantSizedArrayType",
		"Container",
		"ContractInitialized",
		"Contracts",
		"Crypto",
		"D",
		"DOWN",
		"DapperUtilityCoin",
		"DeepThought",
		"DeployedContract",
		"Deposit",
		"DictionaryType",
		"Direction",
		"E",
		"E2",
		"ECDSA_P256",
		"ECDSA_secp256k1",
		"ExampleToken",
		"ExcessFlowReport",
		"F",
		"FBRC",
		"FbrcAdmin0007",
		"FbrcBalance0007",
		"FbrcReceiver0007",
		"FbrcVault0007",
		"Fix64",
		"FixedPoint",
		"FlowToken",
		"Foo",
		"Fruit",
		"FunctionType",
		"FungibleToken",
		"Garment",
		"GarmentAdmin0007",
		"GarmentCollection0007",
		"GarmentCollectionPublic",
		"GarmentData",
		"GarmentDataCreated",
		"GarmentDataIDRetired",
		"GarmentDestroyed",
		"GarmentDetails",
		"GarmentMinted",
		"GarmentNFT",
		"HashAlgorithm",
		"HelloWorld",
		"Holder",
		"I",
		"I1",
		"I2",
		"I3",
		"INFT",
		"Inner",
		"Int",
		"Int128",
		"Int16",
		"Int256",
		"Int32",
		"Int64",
		"Int8",
		"Integer",
		"InterfaceType",
		"Item",
		"ItemAdmin0007",
		"ItemCollection0007",
		"ItemCollectionPublic",
		"ItemData",
		"ItemDataAllocated",
		"ItemDataCreated",
		"ItemDataIDRetired",
		"ItemDestroyed",
		"ItemDetails",
		"ItemMinted",
		"ItemNFT",
		"ItemNFTNowSplittable",
		"ItemNameChanged",
		"K",
		"KECCAK_256",
		"KMAC128_BLS_BLS12_381",
		"KeyList",
		"KeyListEntry",
		"KeyListSignature",
		"Keys",
		"Kitty",
		"LEFT",
		"MainCollection",
		"Material",
		"MaterialAdmin0007",
		"MaterialCollection0007",
		"MaterialCollectionPublic",
		"MaterialData",
		"MaterialDataCreated",
		"MaterialDataIDRetired",
		"MaterialDestroyed",
		"MaterialDetails",
		"MaterialMinted",
		"MaterialNFT",
		"Minter",
		"MinterCreated",
		"MomentCollection",
		"MomentCollectionPublic",
		"MomentData",
		"MomentDestroyed",
		"MomentMinted",
		"MyContract",
		"MyStruct",
		"NFT",
		"Nested",
		"NestedInterface",
		"Never",
		"NewSeriesStarted",
		"NonFungibleToken",
		"NotDeclaredType",
		"Number",
		"OptionalType",
		"OtherInterface",
		"Outer",
		"Path",
		"PersonID",
		"Play",
		"PlayAddedToSet",
		"PlayCreated",
		"PlayRetiredFromSet",
		"PrivatePath",
		"Provider",
		"Public",
		"PublicAccount",
		"PublicKey",
		"PublicPath",
		"R",
		"R1",
		"R2",
		"RI",
		"RIGHT",
		"RInterface",
		"Receiver",
		"Recurse",
		"Recursive",
		"ReferenceType",
		"RestrictedType",
		"Role",
		"RoyaltyPercentageChanged",
		"S",
		"S1",
		"S2",
		"SHA2_256",
		"SHA2_384",
		"SHA3_256",
		"SHA3_384",
		"SI",
		"Set",
		"SetCreated",
		"SetData",
		"SetLocked",
		"ShardedCollection",
		"ShardedMomentCollection",
		"SignatureAlgorithm",
		"SignedFixedPoint",
		"SignedInteger",
		"SignedNumber",
		"SomeInterface",
		"SomeNumber",
		"SomeStruct",
		"StoragePath",
		"String",
		"T",
		"TI",
		"Test",
		"Test1",
		"Test10",
		"Test11",
		"Test12",
		"Test13",
		"Test14",
		"Test15",
		"Test16",
		"Test17",
		"Test18",
		"Test19",
		"Test2",
		"Test20",
		"Test21",
		"Test22",
		"Test23",
		"Test24",
		"Test24Import",
		"Test25",
		"Test26",
		"Test27",
		"Test28",
		"Test29",
		"Test3",
		"Test30",
		"Test31",
		"Test32",
		"Test33",
		"Test34",
		"Test35",
		"Test36",
		"Test4",
		"Test5",
		"Test6",
		"Test7",
		"Test8",
		"Test9",
		"Test9Import",
		"TestAAA",
		"TestBBB",
		"TestCollection",
		"TestContract",
		"TestContractInterface",
		"TestEnum",
		"TestImpl",
		"TestInterface",
		"TestNestedResource",
		"TestNestingResource",
		"TestResource",
		"TestStruct",
		"TestStruct1",
		"TestStruct2",
		"TestStructRenamed",
		"Tick",
		"TickStatus",
		"Token",
		"TokensBurned",
		"TokensDeposited",
		"TokensInitialized",
		"TokensMinted",
		"TokensWithdrawn",
		"TopShot",
		"TopShotAdmin",
		"TopShotShardedCollection",
		"TopshotAdminReceiver",
		"Transfer",
		"TransferAmount",
		"Type",
		"Type_X_Y__qp_identifier",
		"U",
		"UFix64",
		"UInt",
		"UInt128",
		"UInt16",
		"UInt256",
		"UInt32",
		"UInt64",
		"UInt8",
		"UP",
		"UnknownType",
		"UnusedStruct",
		"UsedStruct",
		"V",
		"VariableSizedArrayType",
		"Vault",
		"VaultMinter",
		"Void",
		"Withdraw",
		"Word16",
		"Word32",
		"Word64",
		"Word8",
		"X",
		"XI",
		"Y",
		"Z",
		"_",
		"_100",
		"_8264",
		"_TEST_Bar",
		"_TEST_Baz",
		"_TEST_a",
		"_TEST_b",
		"_TEST_bar",
		"_TEST_baz",
		"_TEST_c",
		"_TEST_d",
		"_TEST_e",
		"_TEST_foo",
		"_TEST_x",
		"_balance",
		"a",
		"a1",
		"a2",
		"aaa",
		"absorb",
		"acc",
		"acceptedBids",
		"access",
		"account",
		"account2",
		"accountA",
		"accountB",
		"acct",
		"add",
		"addBid",
		"addPlay",
		"addPlays",
		"addPublicKey",
		"addedKey",
		"addr",
		"address",
		"address1",
		"address2",
		"addresses",
		"admin",
		"adminAccount",
		"adminRef",
		"after",
		"algo",
		"algorithm",
		"all",
		"allowedAmount",
		"alsoFruit",
		"alsoSelf",
		"amount",
		"another_s",
		"answer",
		"any",
		"anyRef",
		"append",
		"appendAll",
		"arg",
		"arg1",
		"arg2",
		"arg3",
		"arr",
		"array",
		"artist",
		"as",
		"assert",
		"at",
		"attach",
		"auction",
		"auctionId",
		"auctionStatus",
		"auctions",
		"auth",
		"authAccount",
		"authorized",
		"availableBalance",
		"b",
		"balance",
		"bar",
		"batchCollection",
		"batchDeposit",
		"batchMint",
		"batchMintMoment",
		"batchMintNFT",
		"batchWithdraw",
		"baz",
		"bbb",
		"before",
		"bid",
		"bidId",
		"bidInfo",
		"bidder",
		"bids",
		"bisect",
		"block",
		"boo",
		"borrow",
		"borrowA",
		"borrowB",
		"borrowGarment",
		"borrowItem",
		"borrowMaterial",
		"borrowMoment",
		"borrowNFT",
		"borrowR",
		"borrowR2",
		"borrowS",
		"borrowS2",
		"borrowSet",
		"borrowedS",
		"branch",
		"break",
		"bs",
		"bucket",
		"burnTokens",
		"bytes",
		"c",
		"c1",
		"c2",
		"c2s",
		"calculatePrice",
		"callA",
		"callB",
		"callBar",
		"callFoo",
		"callGo",
		"callGoExisting",
		"callGoNew",
		"callTest",
		"cancelBid",
		"cap",
		"cap2",
		"cap3",
		"capabilities",
		"capability",
		"carrier",
		"case",
		"casted",
		"cat",
		"cats",
		"change",
		"changeAfterBorrow",
		"changeItemDataNumberMintable",
		"changeName",
		"changeRoyaltyPercentage",
		"changeX",
		"changeY",
		"character",
		"check",
		"children",
		"cleanDeadItems",
		"code",
		"collection",
		"collections",
		"color",
		"concat",
		"confirmed",
		"container",
		"contains",
		"containsKey",
		"continue",
		"contract",
		"contract1",
		"contract2",
		"contract3",
		"contract4",
		"contract5",
		"contracts",
		"convert",
		"copy",
		"copyS",
		"copyS2",
		"count",
		"countDigits",
		"create",
		"createAuction",
		"createC",
		"createC2",
		"createContainer",
		"createConverter",
		"createDeepThought",
		"createEmptyBidCollection",
		"createEmptyCollection",
		"createEmptyVault",
		"createFoo",
		"createGarmentData",
		"createHolder",
		"createItemData",
		"createItemDataAllocation",
		"createMaterialData",
		"createNewAdmin",
		"createNewBurner",
		"createNewMinter",
		"createNumber",
		"createPlay",
		"createR",
		"createR1",
		"createResource",
		"createRs",
		"createSet",
		"createX",
		"createY",
		"cumulativeAcceptedBids",
		"currGarmentDataID",
		"currItemDataID",
		"currMaterialDataID",
		"currentEntry",
		"currentPrice",
		"currentSeries",
		"currentStartAt",
		"currentTickIndex",
		"currentTime",
		"d",
		"dapperUtilityCoinAdmin",
		"dapperUtilityCoinBalance",
		"dapperUtilityCoinReceiver",
		"dapperUtilityCoinVault",
		"data",
		"decodeHex",
		"decreasePriceAmount",
		"decreasePriceFactor",
		"deepThought",
		"default",
		"deployedContract",
		"deposit",
		"description",
		"destroy",
		"destroys",
		"destructionCount",
		"dict",
		"dict0",
		"dict2",
		"dictRef",
		"dir",
		"div",
		"doesContain",
		"doesContainKey",
		"doesNotContain",
		"doesNotContainKey",
		"doesNotExist",
		"domainSeparationTag",
		"domainSeparationTagUser",
		"double",
		"down",
		"duplicate",
		"duplicatePostBefore",
		"duplicatePre",
		"duplicated",
		"dutchAuctionCap",
		"e",
		"e1",
		"e2",
		"element",
		"else",
		"emit",
		"empty",
		"emptyBids",
		"encodeHex",
		"entries",
		"entry",
		"enum",
		"escrow",
		"escrowVault",
		"even",
		"event",
		"exampleVault",
		"excessAmount",
		"execute",
		"existing",
		"f",
		"f1",
		"f2",
		"f3",
		"factorial",
		"fake",
		"false",
		"feed",
		"fib",
		"field",
		"findTickForAmount",
		"findTickForBid",
		"findWinners",
		"floorPrice",
		"flowTokenAdmin",
		"flowTokenBalance",
		"flowTokenReceiver",
		"flowTokenVault",
		"foo",
		"foo1",
		"foo2",
		"foo3",
		"fooRef",
		"foos",
		"for",
		"from",
		"fruit",
		"fulfill",
		"fun",
		"func",
		"funcTypedField",
		"funcs",
		"g",
		"garment",
		"garmentAndMaterialAcct",
		"garmentCap",
		"garmentCollectionRef",
		"garmentData",
		"garmentDataID",
		"garmentDatas",
		"garmentDetails",
		"garmentID",
		"garmentNFT",
		"garmentOptional",
		"garmentRecipient",
		"garmentRef",
		"garmentWithdrawID",
		"generate",
		"get",
		"getA",
		"getA_new",
		"getAccount",
		"getAllPlays",
		"getAuction",
		"getAuctionDutch",
		"getAuthAccount",
		"getBar",
		"getBid",
		"getBidInfo",
		"getBids",
		"getBlock",
		"getCapability",
		"getContent",
		"getCurrentBlock",
		"getEphemeralRef",
		"getExcessBalance",
		"getFoo",
		"getGarmentData",
		"getGarmentDataRetired",
		"getGarmentDatas",
		"getGarmentDatasRetired",
		"getGarmentNumberMinted",
		"getIDs",
		"getId",
		"getIds",
		"getItemData",
		"getItemDataAllocation",
		"getItemDataAllocations",
		"getItemDataRetired",
		"getItemDatas",
		"getItemDatasRetired",
		"getItemNumberMinted",
		"getLinkTarget",
		"getMaterialData",
		"getMaterialDataRetired",
		"getMaterialDatas",
		"getMaterialDatasRetired",
		"getMaterialNumberMinted",
		"getNum",
		"getNumMomentsInEdition",
		"getNumberMintedPerGarment",
		"getNumberMintedPerItem",
		"getNumberMintedPerMaterial",
		"getOwnerR1",
		"getOwnerR2",
		"getPath",
		"getPlayMetaData",
		"getPlayMetaDataByField",
		"getPlaysInSet",
		"getReport",
		"getSecret",
		"getSetIDsByName",
		"getSetName",
		"getSetSeries",
		"getStatus",
		"getStorageReference",
		"getTick",
		"getType",
		"getXS",
		"go",
		"greeting",
		"h",
		"hasFBRC",
		"hasFlowToken",
		"hasGarmentNFT",
		"hasItemNFT",
		"hasMaterialNFT",
		"hash",
		"hashAlgorithm",
		"hashWithTag",
		"height",
		"hello",
		"helloArg",
		"helloAuthAcc",
		"helloMultiArg",
		"helloPublicAcc",
		"helloReturn",
		"hexDecode",
		"high",
		"holder",
		"i",
		"id",
		"identifier",
		"identity",
		"ids",
		"if",
		"images",
		"import",
		"in",
		"in2",
		"inc",
		"incX",
		"increaseBid",
		"increment",
		"index",
		"init",
		"initialSupply",
		"initializer",
		"input",
		"insert",
		"insertBid",
		"inserted",
		"intType",
		"interface",
		"invalidBorrowS",
		"isAuctionFinished",
		"isDead",
		"isEditionRetired",
		"isEmpty",
		"isEven",
		"isGarmentDataRetired",
		"isInstance",
		"isItemDataRetired",
		"isLastTick",
		"isMaterialDataRetired",
		"isNil",
		"isOdd",
		"isOne",
		"isRevoked",
		"isSetLocked",
		"isSplittable",
		"isSubtype",
		"isValid",
		"isValidGarmentMaterialPair",
		"item",
		"itemCollectionRef",
		"itemData",
		"itemDataAllocation",
		"itemDataID",
		"itemDatas",
		"itemDetails",
		"itemID",
		"items",
		"j",
		"k",
		"k1",
		"k2",
		"key",
		"key1",
		"key2",
		"key3",
		"keyA",
		"keyIndex",
		"keyList",
		"keys",
		"kitty",
		"label",
		"left",
		"length",
		"length2",
		"let",
		"link",
		"linkR",
		"linkR2",
		"linkS",
		"linkS2",
		"load",
		"loadR",
		"loadR2",
		"loadS",
		"loadS2",
		"localA",
		"localAfterA",
		"localAfterB",
		"localB",
		"localBeforeA",
		"localBeforeB",
		"localBids",
		"lock",
		"locked",
		"log",
		"logOwnerAddress",
		"logger",
		"loop",
		"loop1",
		"loop2",
		"low",
		"main",
		"mainImage",
		"makeCloner",
		"makeCounter",
		"makeFoos",
		"makeKittyCloner",
		"makeKittyIdGetter",
		"makeSplittable",
		"makeTestNestingResource",
		"makeTestResource",
		"map",
		"mapRef",
		"marketplace",
		"material",
		"materialCap",
		"materialCollectionRef",
		"materialData",
		"materialDataID",
		"materialDatas",
		"materialDetails",
		"materialID",
		"materialNFT",
		"materialOptional",
		"materialRecipient",
		"materialRef",
		"materialWithdrawID",
		"max",
		"maxMinusOne",
		"maxPlusOne",
		"maxPlusOne2",
		"maybeCapNil",
		"maybeCapNonNil",
		"maybeFuncNil",
		"maybeFuncNonNil",
		"maybeR",
		"message",
		"metadata",
		"mid",
		"midBid",
		"midBidId",
		"min",
		"minMinusOne",
		"minMinusOne2",
		"minPlusOne",
		"mint",
		"mintMoment",
		"mintNFT",
		"mintTokens",
		"mintedVault",
		"minter",
		"mod",
		"momentID",
		"momentIDs",
		"moments",
		"moveToStack_Borrow_AndMoveBack",
		"myFunc",
		"n",
		"name",
		"names",
		"namesRef",
		"nestedElementResourceRef",
		"nestedResources",
		"nestingResource",
		"nestingResourceRef",
		"new",
		"newAdmin",
		"newCollection",
		"newCurrentSeries",
		"newGarment",
		"newID",
		"newItem",
		"newMaterial",
		"newMoment",
		"newPlay",
		"newRoyaltyPercentage",
		"newSet",
		"newValue",
		"newX",
		"nextBlock",
		"nextGarmentDataID",
		"nextItemDataAllocation",
		"nextItemDataID",
		"nextMaterialDataID",
		"nextPlayID",
		"nextSetID",
		"nextTickStartAt",
		"nft",
		"nftCap",
		"nftId",
		"nftIds",
		"nftReceiver",
		"nftRef",
		"nftRef2",
		"nfts",
		"nil",
		"nonExistent",
		"nonExisting",
		"nonImportableField",
		"none",
		"noop",
		"notAnEvent",
		"nothing",
		"num",
		"numBuckets",
		"numInGarment",
		"numInItem",
		"numInMaterial",
		"numInPlay",
		"numMoments",
		"number",
		"numberItemDataMintable",
		"numberItemDataMintableChanged",
		"numberMinted",
		"numberMintedPerGarment",
		"numberMintedPerGarmentDataID",
		"numberMintedPerItem",
		"numberMintedPerItemDataID",
		"numberMintedPerMaterial",
		"numberMintedPerMaterialDataID",
		"numberMintedPerPlay",
		"numberOfItems",
		"numberWinning",
		"numbers",
		"numbers2",
		"nums",
		"odd",
		"of",
		"ok",
		"old",
		"oldA",
		"oldAuction",
		"oldEscrow",
		"oldTick",
		"oldToken",
		"oldVault",
		"oldX",
		"oldY",
		"on",
		"one",
		"optR",
		"optR2",
		"optRef",
		"other",
		"ownedNFTs",
		"owner",
		"ownerNFTCap",
		"ownerVaultCap",
		"p1",
		"p2",
		"panic",
		"paramX",
		"paramY",
		"parameters",
		"path",
		"payer",
		"pedantic",
		"play",
		"playDatas",
		"playID",
		"playIDs",
		"plays",
		"post",
		"pre",
		"prepare",
		"previousAcceptedBids",
		"price",
		"priv",
		"private",
		"pub",
		"public",
		"publicAccount",
		"publicKey",
		"publisher",
		"publisherBalance",
		"qualifiedA",
		"qualifiedAfterA",
		"qualifiedAfterB",
		"qualifiedB",
		"qualifiedBeforeA",
		"qualifiedBeforeB",
		"quantity",
		"r",
		"r1",
		"r2",
		"r2s",
		"rCap",
		"rCap2",
		"rType",
		"ranDestructor",
		"ranDestructorA",
		"ranDestructorB",
		"rand",
		"random",
		"rawValue",
		"rc",
		"receive",
		"receiver",
		"receiverBalance",
		"receiverRef",
		"recipient",
		"recipientAddr",
		"recurse",
		"recursive",
		"ref",
		"ref1",
		"ref2",
		"refS",
		"refValue",
		"refs",
		"remove",
		"removeBidFromTick",
		"removeFirst",
		"removeLast",
		"removed",
		"report",
		"res",
		"res1",
		"res2",
		"resource",
		"resourceConverter",
		"resourceConverter2",
		"resources",
		"restrictions",
		"result",
		"result1",
		"result2",
		"result3",
		"results",
		"retireAll",
		"retireGarmentData",
		"retireItemData",
		"retireMaterialData",
		"retirePlay",
		"retired",
		"return",
		"returnA",
		"returnB",
		"returnEarly",
		"returnNothing",
		"returnResourceOpt",
		"returnXS",
		"revoke",
		"ri",
		"ris",
		"role",
		"roles",
		"royaltyPercentage",
		"royaltyVault",
		"royaltyVaultAddr",
		"royaltyVaultCap",
		"rs",
		"rs2",
		"s",
		"s1",
		"s2",
		"s3",
		"s4",
		"sCap",
		"sCap2",
		"sType",
		"saturatingAdd",
		"saturatingDivide",
		"saturatingMultiply",
		"saturatingSubtract",
		"save",
		"saveAndLink",
		"saveAndLinkR",
		"saveAndLinkS",
		"saveR",
		"saveS",
		"secondImage",
		"seenKeyIndices",
		"self",
		"send",
		"serialNumber",
		"series",
		"set",
		"setData",
		"setDatas",
		"setID",
		"setIDs",
		"setName",
		"setRef",
		"setToRead",
		"setWinning",
		"setX",
		"sets",
		"signAlgo",
		"signature",
		"signatureAlgorithm",
		"signatureSet",
		"signedData",
		"signer",
		"signer1",
		"signer2",
		"single",
		"singleAuth",
		"singleChangeAfterBorrow",
		"singleR",
		"singleR2",
		"singleS",
		"singleS2",
		"singleTyped",
		"size",
		"slice",
		"split",
		"sprout",
		"startAt",
		"startNewSeries",
		"startPrice",
		"startTime",
		"startedAt",
		"status",
		"storage",
		"storageCapacity",
		"storageUsed",
		"storeAdmin",
		"string",
		"stringType",
		"struct",
		"sum",
		"switch",
		"t",
		"table",
		"tag",
		"target",
		"temp",
		"tempA",
		"tempB",
		"tempC",
		"test",
		"test1",
		"test2",
		"testActual",
		"testCase",
		"testElseIf",
		"testElseIfElse",
		"testEqualStrings",
		"testFalse",
		"testFalseAndFalse",
		"testFalseAndTrue",
		"testFalseFalse",
		"testFalseTrue",
		"testIntegersEqual",
		"testIntegersGreater",
		"testIntegersLess",
		"testIntegersUnequal",
		"testInvalidUnauthorized",
		"testNil",
		"testNoElse",
		"testResource",
		"testResource2",
		"testResources",
		"testSome",
		"testTrue",
		"testTrueAndFalse",
		"testTrueAndTrue",
		"testTrueFalse",
		"testTrueTrue",
		"testTypedprivate",
		"testTypedpublic",
		"testUnequalStrings",
		"testUnicodeA",
		"testUnicodeB",
		"testUnicodeStrings",
		"testUntypedprivate",
		"testUntypedpublic",
		"testValidAuthorized",
		"testValidRestricted",
		"testX",
		"tests",
		"tick",
		"tickDuration",
		"tickLength",
		"tickOrFulfill",
		"tickPrice",
		"tickStatus",
		"tickTime",
		"ticks",
		"time",
		"timestamp",
		"tmpVault",
		"to",
		"toBigEndianBytes",
		"toBytes",
		"toLower",
		"toString",
		"toggle",
		"token",
		"tokenAdmin",
		"tokenReceiver",
		"tokenVault",
		"token_name",
		"tokens",
		"tooMuchCash",
		"totalBids",
		"totalItems",
		"totalSupply",
		"transaction",
		"transfer",
		"transferTokens",
		"true",
		"ts",
		"turnOn",
		"txs",
		"type",
		"typeAt",
		"u",
		"unknown",
		"unknownType",
		"unknownType1",
		"unknownType2",
		"unlink",
		"unlinkR",
		"unlinkR2",
		"unlinkS",
		"unlinkS2",
		"unsafeRandom",
		"up",
		"upTo",
		"update__experimental",
		"use",
		"use1",
		"use2",
		"useB",
		"utf8",
		"uuid",
		"v",
		"v1",
		"val",
		"validWeights",
		"validate",
		"value",
		"values",
		"var",
		"vault",
		"vaultCap",
		"vaultx",
		"verify",
		"verifyPoP",
		"version",
		"versusAuctionDutchBidCollection",
		"versusAuctionDutchCollection",
		"view",
		"void",
		"wasFed",
		"weight",
		"while",
		"winning",
		"winningBid",
		"winningBids",
		"winningPrice",
		"withType",
		"withdraw",
		"withdrawExcessFlow",
		"withdrawID",
		"withdrawVault",
		"withdrawn",
		"withoutType",
		"wrong",
		"x",
		"x0",
		"x1",
		"x2",
		"x3",
		"xRef",
		"xi",
		"xs",
		"xs2",
		"xs3",
		"xxx",
		"y",
		"y1",
		"y2",
		"ys",
		"z",
		"zipOf3",
	},
	TokenString: {
		"\"",
		"\" \"",
		"\" from \"",
		"\" from foo\"",
		"\" from foo.bar\"",
		"\"\"",
		"\"0\"",
		"\"0102\"",
		"\"010203\"",
		"\"01020304\"",
		"\"012\"",
		"\"01CADE\"",
		"\"0304\"",
		"\"0506\"",
		"\"0a09090970756220636f6e747261637420546573743137207b0a0909097d\"",
		"\"0a09090970756220636f6e747261637420546573743138207b0a0909097d\"",
		"\"0a09090970756220636f6e747261637420546573743332207b0a0909097d\"",
		"\"0a2020202020202020202020202020580a202020202020202020202020\"",
		"\"0a202020202020202020202020202070756220636f6e74726163742054657374207b7d0a202020202020202020202020\"",
		"\"1\"",
		"\"1.0\"",
		"\"123\"",
		"\"2\"",
		"\"3\"",
		"\"4\"",
		"\"476F20576974682074686520466C6F77\"",
		"\"5\"",
		"\"6\"",
		"\"666f6f\"",
		"\"7\"",
		"\"70756220636f6e74726163742054657374207b207075622066756e20746573742829207b7d207d\"",
		"\"70756220636f6e74726163742054657374207b7d\"",
		"\"70756220636f6e747261637420696e746572666163652054657374207b207075622066756e20746573742829207d\"",
		"\"70756220636f6e747261637420696e746572666163652054657374207b7d\"",
		"\"8\"",
		"\"9\"",
		"\"?!\"",
		"\"A\"",
		"\"AAA\"",
		"\"Abc\"",
		"\"Amount minted must be greater than zero\"",
		"\"Amount minted must be less than the allowed amount\"",
		"\"Amount withdrawn must be less than or equal than the balance of the Vault\"",
		"\"AuctionDutch\"",
		"\"B\"",
		"\"BBB\"",
		"\"Balance must be initialized to the initial balance\"",
		"\"Bar\"",
		"\"C\"",
		"\"Cannot add the Play to Set: Play doesn't exist\"",
		"\"Cannot add the Play to Set: Play doesn't exist.\"",
		"\"Cannot add the play to the Set after the set has been locked\"",
		"\"Cannot add the play to the Set after the set has been locked.\"",
		"\"Cannot borrow Garment reference: The ID of the returned reference is incorrect\"",
		"\"Cannot borrow Item reference: The ID of the returned reference is incorrect\"",
		"\"Cannot borrow Material reference: The ID of the returned reference is incorrect\"",
		"\"Cannot borrow Moment reference: The ID of the returned reference is incorrect\"",
		"\"Cannot borrow Set: The Set doesn't exist\"",
		"\"Cannot change garment name. Item is dead\"",
		"\"Cannot destroy, item not dead\"",
		"\"Cannot fulfill is not finished\"",
		"\"Cannot get escrow\"",
		"\"Cannot mint Garment. garmentData not found\"",
		"\"Cannot mint Item. ItemData not found\"",
		"\"Cannot mint Item. ItemDataID retired\"",
		"\"Cannot mint Material. materialData not found\"",
		"\"Cannot mint garment. garmentDataID retired\"",
		"\"Cannot mint material. materialDataID retired\"",
		"\"Cannot mint the moment from this play: This play has been retired\"",
		"\"Cannot mint the moment from this play: This play has been retired.\"",
		"\"Cannot mint the moment: This play doesn't exist\"",
		"\"Cannot mint the moment: This play doesn't exist.\"",
		"\"Cannot retire Garment: Garment doesn't exist!\"",
		"\"Cannot retire Material: Material doesn't exist!\"",
		"\"Cannot retire item: Item doesn't exist!\"",
		"\"Cannot retire the Play: Play doesn't exist in this set!\"",
		"\"Cannot split. Item is dead\"",
		"\"Cannot withdraw: Garment does not exist in the collection\"",
		"\"Cannot withdraw: Item does not exist in the collection\"",
		"\"Cannot withdraw: Material does not exist in the collection\"",
		"\"Cannot withdraw: Moment does not exist in the collection\"",
		"\"Cannot withdraw: NFT does not exist in the collection\"",
		"\"Could not borrow a reference to the stored Garment collection\"",
		"\"Could not borrow a reference to the stored Material collection\"",
		"\"Could not find auction capability\"",
		"\"Could not find bid\"",
		"\"Could not find tick for amount\"",
		"\"D\"",
		"\"DapperUtilityCoin\"",
		"\"Deposit balance needs to be positive!\"",
		"\"E\"",
		"\"F\"",
		"\"FBRC\"",
		"\"FLOW-V0.0-user\"",
		"\"Finished\"",
		"\"FlowToken\"",
		"\"Flowers \\u{1F490} are beautiful\"",
		"\"Flowers\"",
		"\"Foo\"",
		"\"FungibleToken\"",
		"\"Garment Capability is invalid\"",
		"\"GarmentNFT\"",
		"\"HashAlgorithm\"",
		"\"HashAlgorithmSHA3_256\"",
		"\"Hello \"",
		"\"Hello World!",
		"\"Hello World!\"",
		"\"Hello pub \"",
		"\"Hello return!\"",
		"\"Hello\"",
		"\"Hello, World!\"",
		"\"HelloWorld\"",
		"\"Hi\"",
		"\"I\"",
		"\"I1\"",
		"\"I2\"",
		"\"Incorrect amount removed\"",
		"\"Incorrect amount returned\"",
		"\"Initial balance must be non-negative\"",
		"\"Input must have even number of characters\"",
		"\"Insufficient funds\"",
		"\"Invalid character \"",
		"\"Item is set to unsplittable\"",
		"\"ItemData already allocated\"",
		"\"ItemNFT with itemDataID already minted\"",
		"\"ItemNFT\"",
		"\"Material Capability is invalid\"",
		"\"MaterialNFT\"",
		"\"NFT does not exist in the collection!\"",
		"\"New Play Metadata cannot be empty\"",
		"\"New Play metadata cannot be empty\"",
		"\"New Set name cannot be empty\"",
		"\"New Vault balance must be the difference of the previous balance and the withdrawn Vault\"",
		"\"New Vault balance must be the sum of the previous balance and the deposited Vault\"",
		"\"No admin resource in storage\"",
		"\"Not a Address value\"",
		"\"Not a AnyStruct value\"",
		"\"Not a Bar value\"",
		"\"Not a Baz value\"",
		"\"Not a Bool value\"",
		"\"Not a Direction value\"",
		"\"Not a Fix64 value\"",
		"\"Not a Foo value\"",
		"\"Not a Foo? value\"",
		"\"Not a Int value\"",
		"\"Not a Int128 value\"",
		"\"Not a Int16 value\"",
		"\"Not a Int256 value\"",
		"\"Not a Int32 value\"",
		"\"Not a Int64 value\"",
		"\"Not a Int8 value\"",
		"\"Not a PrivatePath value\"",
		"\"Not a PublicPath value\"",
		"\"Not a StoragePath value\"",
		"\"Not a String value\"",
		"\"Not a String? value\"",
		"\"Not a UFix64 value\"",
		"\"Not a UInt value\"",
		"\"Not a UInt128 value\"",
		"\"Not a UInt16 value\"",
		"\"Not a UInt256 value\"",
		"\"Not a UInt32 value\"",
		"\"Not a UInt64 value\"",
		"\"Not a UInt8 value\"",
		"\"Not a Word16 value\"",
		"\"Not a Word32 value\"",
		"\"Not a Word64 value\"",
		"\"Not a Word8 value\"",
		"\"Not a [Foo; 1] value\"",
		"\"Not a [Foo] value\"",
		"\"Not a [Int; 2] value\"",
		"\"Not a [String] value\"",
		"\"Not a [[String]] value\"",
		"\"Not a {String: Foo} value\"",
		"\"Not a {String: String} value\"",
		"\"NotStarted\"",
		"\"One\"",
		"\"Ongoing\"",
		"\"PublicKey\"",
		"\"R\"",
		"\"Recurse\"",
		"\"Royalty capability is invalid!\"",
		"\"S\"",
		"\"S.test.A\"",
		"\"S.test.B\"",
		"\"S.test.F\"",
		"\"S.test.N\"",
		"\"S.test.R\"",
		"\"S.test.S\"",
		"\"S.test.S2\"",
		"\"SignatureAlgorithmECDSA_P256\"",
		"\"Signer is not the token admin\"",
		"\"Test\"",
		"\"Test1\"",
		"\"Test10\"",
		"\"Test11\"",
		"\"Test12\"",
		"\"Test13\"",
		"\"Test14\"",
		"\"Test15\"",
		"\"Test16\"",
		"\"Test17\"",
		"\"Test18\"",
		"\"Test19\"",
		"\"Test2\"",
		"\"Test20\"",
		"\"Test21\"",
		"\"Test22\"",
		"\"Test23\"",
		"\"Test24\"",
		"\"Test24Import\"",
		"\"Test25\"",
		"\"Test26\"",
		"\"Test27\"",
		"\"Test28\"",
		"\"Test29\"",
		"\"Test3\"",
		"\"Test30\"",
		"\"Test31\"",
		"\"Test32\"",
		"\"Test33\"",
		"\"Test34\"",
		"\"Test35\"",
		"\"Test36\"",
		"\"Test4\"",
		"\"Test5\"",
		"\"Test6\"",
		"\"Test7\"",
		"\"Test8\"",
		"\"Test9\"",
		"\"Test9Import\"",
		"\"TestContract\"",
		"\"TestContractInterface\"",
		"\"The ID of the reference is incorrect\"",
		"\"The ID of the withdrawn NFT is incorrect\"",
		"\"The ID of the withdrawn token must be the same as the requested ID\"",
		"\"The created collection must be empty!\"",
		"\"The newly created Vault must have zero balance\"",
		"\"The play has already beed added to the set\"",
		"\"The play has already beed added to the set.\"",
		"\"Three\"",
		"\"TopShot\"",
		"\"TopShotShardedCollection\"",
		"\"TopshotAdminReceiver\"",
		"\"Two\"",
		"\"Unable to borrow receiver reference\"",
		"\"Unable to borrow recipient's garment collection\"",
		"\"Unable to borrow recipient's hat collection\"",
		"\"Unable to borrow recipient's item collection\"",
		"\"Unknown artist\"",
		"\"Unknown name\"",
		"\"Unknown\"",
		"\"Withdrawal amount must be positive\"",
		"\"Withdrawal amount must be the same as the balance of the withdrawn Vault\"",
		"\"World\"",
		"\"X\"",
		"\"XXX\"",
		"\"XYZ\"",
		"\"YES\"",
		"\"\\",
		"\"a\"",
		"\"ab\"",
		"\"abc\"",
		"\"abcdef\"",
		"\"artist\"",
		"\"artist1\"",
		"\"auction doesn't exist\"",
		"\"b\"",
		"\"bar\"",
		"\"baz\"",
		"\"bid doesn't exist\"",
		"\"bid info does not exist\"",
		"\"bid info doesn not exist\"",
		"\"bid is already accepted\"",
		"\"c\"",
		"\"caf\\u{E9}\"",
		"\"cafe\\u{301}\"",
		"\"cafe\\u{301}b\"",
		"\"cafe\\u{301}ba\\u{308}\"",
		"\"cafe\\u{301}ba\\u{308}be\"",
		"\"container\"",
		"\"d\"",
		"\"deep-thought\"",
		"\"def\"",
		"\"deposited vault is not an ExampleToken.Vault\"",
		"\"description1\"",
		"\"destroyed\"",
		"\"destroying A with id:\"",
		"\"destroying B with id:\"",
		"\"destroying R\"",
		"\"do nothing\"",
		"\"duplicate\"",
		"\"e\"",
		"\"escrow for bid does not exist\"",
		"\"even\"",
		"\"f\"",
		"\"failed to borrow resource converter\"",
		"\"false\"",
		"\"first\"",
		"\"fo-o\"",
		"\"foo\"",
		"\"foo1\"",
		"\"foo2\"",
		"\"garment and material dataID pair not allocated\"",
		"\"garmentDataID not found\"",
		"\"ghi\"",
		"\"hello from bar\"",
		"\"hello from foo\"",
		"\"hello\"",
		"\"hello123\"",
		"\"hello_123\"",
		"\"image1\"",
		"\"imported\"",
		"\"imported1\"",
		"\"imported2\"",
		"\"initial string\"",
		"\"invalid destroy\"",
		"\"invalid init\"",
		"\"itemDataID not allocated\"",
		"\"itemDataID not found\"",
		"\"log\"",
		"\"mainImage1\"",
		"\"mapRef\"",
		"\"materialDataID not found\"",
		"\"missing C\"",
		"\"missing\"",
		"\"n must be positive\"",
		"\"n\"",
		"\"name\"",
		"\"name1\"",
		"\"never\"",
		"\"nil\"",
		"\"no R\"",
		"\"no materialDataID found\"",
		"\"no x\"",
		"\"no\"",
		"\"nope\"",
		"\"not an [UInt8] array, but a String\"",
		"\"odd\"",
		"\"ok\"",
		"\"one\"",
		"\"original\"",
		"\"other\"",
		"\"otherImage1\"",
		"\"r\"",
		"\"r1\"",
		"\"r2\"",
		"\"return value\"",
		"\"s\"",
		"\"secondImage1\"",
		"\"self\"",
		"\"should never be executed\"",
		"\"some-tag\"",
		"\"something\"",
		"\"string\"",
		"\"string_1234\"",
		"\"string_456\"",
		"\"string_d\"",
		"\"t",
		"\"t\"",
		"\"tag\"",
		"\"te\\Xst\"",
		"\"te\\tst\\\"te\\u{1F3CE}\\u{FE0F}xt\"",
		"\"te\\u",
		"\"te\\us",
		"\"te\\u{",
		"\"te\\u{X}st\"",
		"\"te\\u{}\"",
		"\"test \\0\\n\\r\\t\\\"\\'\\\\ xyz\"",
		"\"test message\"",
		"\"test\"",
		"\"test.cdc\"",
		"\"testValue\"",
		"\"this is a test \\t\\\\new line and race car:\\n\\u{1F3CE}\\u{FE0F}\"",
		"\"this is a test\"",
		"\"true\"",
		"\"two\"",
		"\"unexpectedly nil\"",
		"\"unknown\"",
		"\"x < 2\"",
		"\"x >= 0\"",
		"\"x >= 1\"",
		"\"x must be positive\"",
		"\"x must be smaller than 2\"",
		"\"x!\"",
		"\"x\"",
		"\"x1\"",
		"\"x2\"",
		"\"y should be zero\"",
		"\"y\"",
		"\"yes\"",
	},
}
